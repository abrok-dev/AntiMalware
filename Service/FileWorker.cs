using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.IO;
using System.IO.Compression;
namespace Service
{
    class FileWorker
    {
        public String quarFolder = "C:/Users/cheva/source/repos/Antivirus/Quarantine";
        private int mzHeaderConst = 0x5a4d;
        private int zipHeaderConst = 0x04034b50;
        public DataHandler data;
        public void breakPe(String filePath)
        {
        checkFile:
            try
            {
                BinaryReader br = new BinaryReader(File.Open( filePath, FileMode.Open));
                byte[] head = new byte[16];

                for (int i = 0; i < 16; i++)
                {
                    head[i] = (br.ReadByte());
                    head[i] = (byte)~head[i];
                }
               
                br.Close();
               
                BinaryWriter bw = new BinaryWriter(File.Open
                    ( filePath, FileMode.Open));
                bw.Write(head);
                bw.Close();
            }
            catch (IOException)
            {
                System.Threading.Thread.Sleep(300);
                goto checkFile;
            }

        }
        public String extractFolder = "C:/Users/cheva/source/repos/AntiMalware/Extract";



        public FileWorker(ref DataHandler data, String filePath = "C:/Users/cheva/source/repos/Antivirus/Quarantine")
        {
            this.data = data;
            this.quarFolder = filePath;
            Directory.CreateDirectory(filePath);

        }

        public bool moveToQuar(String from)
        {//TODO: ERROR HANDLER
            breakPe(from);

            File.Move(from, quarFolder);
            return true;

        }

        public bool removeFile(String from)
        {
            //TODO: ERROR HANDLER
            File.Delete(from);
            return true;
        }

        public bool recoverFile(String file)
        {
            FileInfo info = new FileInfo(file);
            breakPe(this.quarFolder + info.Name);
            File.Move(this.quarFolder + info.Name, file);
            return true;
        }

        public String extractZip(String zipPath)
        {//TODO: ERRORS HANDLER
            try
            {
                ZipFile.ExtractToDirectory(zipPath, extractFolder);
                return extractFolder;
            }
            catch { return extractFolder; }

        }

        public bool clearZip(String filePath)
        {
            //TODO:ERRORS HANDLER
            try
            {
                File.Delete(filePath);

                return true;
            }
            catch { return false; }
        }
    }
}
